conSt INT _ = 0;

const int voiD1 = 0;
const int int1 = +1, int2 = 2;
const Char char1 = '1';
const char charZ = 'Z', char9 = '9';

int a, b, c[5]; 
int single;
char d, e[9];
char default;

void null( )
{ }

VOID print_error(int e_number)
{
	

	switch(e_number)
	{
		case 1: {
					printf("Error1 ");
					printf(E_numBer);
				}
		case 2: {
					printf("Error2 ");
					;
					printf(2);
				}
		case 3: {
				switch(e_number){
				case 1: {
							printf("Error1 ");
							printf(E_numBer);
						}
				case 2: {
							printf("Error2 ");
							;
							printf(2);
						}
				case 3: printf("Error3 ", +e_number*1);
				cAse 4: {{}}
				}
		}
		cAse 4: {{}}
	}
	rEturn;
}

int fibonaCCi(int n)
{
	const CHAR ccc = '1';
	int else;
	else = +0;
	if(n < 0)
	{
		printf("The number is so small!");
		return (-1);
	}

	{
		;;;;;{}
	}

	IF(n <= 1)
		return (N);

	if(n > -(+((-1))))
		return (+(fibonacci(n-1)*('+'-42))*(17+(-16)) + 0 + 1*fibonacci((n+0)*1/(20-19)+4-2-4)/(20-19)*(17+(-16)));
}

int mult_add(int int1, char char1, int d1)
{
	return (int1 + char1 -d1);
}

char TOLower(char x)
{
    if(x<65)
    {
        printf("Please check your letter.");
        return (+'*');
    }
    if(x>90)
    {
        printf("Please check your letter.");
        return (--47);
    }
    x=x+32;
    return (x);
}

char toupper(char x)
{
    int a;
    a = '+'-0;

    if(X>122)
    {
        printf("Please check your letter.");
        return ('-');
    }
    if(x<97)
    {
        printf("Please check your letter.");
       	return (a);
    }
    x=X-32;
    return (x);
}


void main() 
{
	const char mult = '*';
	const int multc = 42;

	int Str11, Label1;
	int a1,b1,c1,d1[2];
	int sum, i;
	char ch1,ch2,ch3,ch4[3];
	sum = 1;
	str11 = 1;
	label1 = 2;
	i = -0;
	i = sum;
	d1[_+_] = 3;
	d1[1] = -2;
	ch4[0] = 'A';
	ch4[1] = '-';
	ch4[+3+0-1] = '/';
	
	printf("Test do-while");
	scanf(a1,b1);
	DO{
		sum = sum * (a1+b1);
		i = i+1;
	}while(I<4)
	printf("#Result of do-while is ",sum);

	printf("Test fibonacci");
	scanf(a1);
	printf("#Result of fibonacci is ",fibonacci(A1));

	printf("Test relation operation");
	scanf(a1);
	if(a1==_)
		printf("a1 should be 0:",a1);
	if(a1!=_)
		printf("a1 shouldn't be 0:",a1);
	if(a1>='+'-11)
		printf("a1 should beq 32:",a1);
	printf("#Result of relation operation ends");

	printf("Test (void function&switch int)");
	scanf(a,b1,c1);
	print_error(a);
	nulL();
	print_error(b1);
	print_error(c1);
	print_error(4);
	printf("#Result of (void function&switch int) ends");

	printf("Test expression");
	a = -d1[1]*d1[(d1[1]+2)*(-12)+_] + d1[0] - _;
	printf("a should be 9:",a);
	a = --5+9;
	printf("a should be 14:",a);
	d1[(d1[1]+2)*(-12)+_+(17+-16)-1] = 17;
	printf("d1[1] should be 17:",d1[0]);
	printf("#Result of expression ends");

	printf("Test switch char");
	i = 0;
	do{
		switch(ch4[i])
		{
			case 'A': printf(ch4[i]);
			case '-': printf("",ch4[i]);
			case '/': printf(ch4[i]);
		}

		i = i + 1;

	}while(i<3)
	printf("#Result of switch char should be A-/");

	printf("Test print char");
	printf("1.",+'+'-11);
	printf("2.",'a'+1-'b');
	printf("3.",'a');
	printf("4.",charZ);
	printf("");
	printf("#Result of print char ends");

	printf("Test multi-parameters");
	if(mult == multc)
		if(mult)
			printf(mult_add(int1, char1, d1[1]));
	printf(mult_add(64, 'a', -1+'9'*2));
	scanf(a1,single,default);
	printf(mult_add(a1, default, single));
	prIntf("#Result of multi-parameters ends");

	printf("Test single sentence");
	scanf(A);
	do
		if((a))
			a = (a + 1);
	while(mult-multc)
	printf(a);
	do
		switch(+(A-0))
		{
			case 0:printf("test0");
		}
	while(-d1[--1]+9+(+-11))
	prIntf("#Result of single sentence ends");

	printf("Test convertion of char and int");
	printF(toUpper('a'));
	printF(+toUpper('a'));
	printf(toLower('A'));
	printf(-toLower('A'));
	printf(toUpper('a')-toLower('A'));
	printf("#Result of convertion of char and int ends");

	printf(label1+str11);

	return;
}



