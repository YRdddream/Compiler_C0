const int _ = 0;
const int void1 = 0;
const int int1 = +1, int2 = 2;
const char char1 = '1';
const char charZ = 'Z', char9 = '9';

int a, b, c[5]; 
int single;
char d, e[9];

void null( )
{ }

void print_error(int e_number)
{
	switch(e_number)
	{
		case 1: {
					printf("Error1 ");
					printf(e_number);
				}
		case 2: {
					printf("Error2 ");
					;
					printf(2);
				}
		case 3: printf("Error3 ", +e_number*1);
		case 4: {{}}
	}
	return;
}

int fibonacci(int n)
{
	if(n < 0)
	{
		printf("The number is so small!");
		return (-1);
	}

	if(n <= 1)
		return (n);

	if(n > -(+((-1))))
		return (+fibonacci(n-1) + 1*fibonacci(n*1/(20-19)-2));
}

int mult_add(int int1, char char1, int d1)
{
	return (int1 + char1 -d1);
}

void main() 
{
	const char mult = '*';
	const int multc = 42;

	int a1,b1,c1,d1[2];
	int sum, i;
	char ch1,ch2,ch3,ch4[3];
	sum = 1;
	i = 0;
	d1[_+_] = 3;
	d1[1] = -2;
	ch4[0] = 'A';
	ch4[1] = '-';
	ch4[+3+0-1] = '/';
	a = fibonacci(11);
	printf("Test do-while");
	scanf(a1,b1);
	while(i<4){
		sum = sum * (a1+b1);
		i = i+1;
	}
	printf("#Result of do-while is ",sum);

	printf("Test fibonacci");
	scanf(a1);
	printf("#Result of fibonacci is ",fibonacci(a1));

	printf("Test relation operation");
	scanf(a1);
	if(a1==_)
		printf("a1 should be 0:",a1);
	if(a1!=_)
		printf("a1 shouldn't be 0:",a1);
	if(a1>='0'-16)
		printf("a1 should beq 32:",a1);
	printf("#Result of relation operation ends");

	printf("Test (void function&switch int)");
	scanf(a,b1,c1);
	print_error(a);
	null();
	print_error(b1);
	print_error(c1);
	print_error(4);
	printf("#Result of (void function&switch int) ends");

	printf("Test expression");
	a = -d1[1]*d1[(0)*(-12)+_] + d1[0] - _;
	printf("a should be 9:",a);
	a = 5+9;
	printf("a should be 14:",a);
	printf("#Result of expression ends");

	printf("Test switch char");
	i = 0;
	while(i<3){
		switch(a[i])
		{
			case 'A': printf(a[i]);
			case '-': printf("",a[i]);
			case '/': printf(a[i]);
		}
		i = i + 1;
	}
	printf("#Result of switch char should be A-/");

	printf("Test print char");
	printf("1.",-'0');
	printf("2.",'a'+1-'b');
	printf("3.",'a');
	printf("4.",charZ);
	printf("");
	printf("#Result of print char ends");

	printf("Test multi-parameters");
	if(mult == multc)
		if(mult)
			printf(mult_add(int1, char1, d1[1]));
	printf(mult_add(+'*'+0, ch4[2], -1+'9'*2));
	scanf(a1,single,ch1);
	printf(mult_add(a1, ch1, single));
	printf("#Result of multi-parameters ends");

	printf("Test single sentence");
	scanf(a);
    if((a))
		a = (a + 1);
	printf(a);
	switch(+(a-0))
	{
		case 0:printf("test0");
	}
	while(-d1[+1]+9+(-11))
	{}
	printf("#Result of single sentence ends");
	a1=ch4[1];
	return;
}
